version: '3'
services:
  openai:
    build:
      context: openai
      dockerfile: Dockerfile
    container_name: openai
    image: openai:v1
    restart: unless-stopped
    tty: true
    volumes:
      - app2data:/var/www
    networks:
      - frontend
    ports:
      - 5001:5001

  opencv:
    build:
      context: opencv
      dockerfile: Dockerfile
    container_name: opencv
    image: opencv:v1
    restart: unless-stopped
    tty: true
    volumes:
      - app2data:/var/www
    networks:
      - backend
    ports:
      - 7651:7651


  #Flask App Container
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    image: myapp:v1
    restart: unless-stopped
    tty: true
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "True"
      APP_PORT: 5000
    volumes:
      - appdata:/var/www
    networks:
      - frontend
      - backend
    ports:
      - 5000:5000

  #Nginx Service
  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: webserver
    restart: unless-stopped
    tty: true
    environment:
      APP_ENV: "dev"
      APP_NAME: "webserver"
      APP_DEBUG: "true"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/etc/nginx
    depends_on:
      - flask
    networks:
      - frontend

#Docker Networks
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

#Volumes
volumes:
  appdata:
    driver: local
  nginxdata:
    driver: local
  app2data:
    driver: local