version: '3'
services:

  #Flask App Container
  python:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask
    image: faizanbashir/flask-python:3.6
    restart: unless-stopped
    tty: true
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "True"
      APP_PORT: 5000
      MONGODB_DATABASE: flaskdb
    volumes:
      - ./app:/var/www
    depends_on:
      - mongodb
    networks:
      - app-network

  #MongoDB database container
  mongodb:
    image: mongo:4.0.2
    container_name: mongodb
    restart: unless-stopped
    ports: 
      - "27017:27017"
    environment:
      MONGODB_DATABASE: flaskdb
      MONGODB_USER: root
      MONGODB_PASS: root
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - app-network

  #Nginx Service
  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: faizanbashir/webserver:latest
    container_name: webserver
    restart: unless-stopped
    tty: true
    environment:
      APP_ENV: "dev"
      APP_NAME: "webserver"
      APP_DEBUG: "true"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  mongodbdata:
    driver: local